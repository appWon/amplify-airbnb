type Property @model 
@searchable 
@auth(
    rules: [
      # { allow: groups, groups: ["Admin"], operations: [create, delete, read, update] },
      # { allow: owner, operations: [create, read, update, delete] }
      { allow: public }
    ]
  )
  {
    id: ID!
    title: String!
    price: Int!
    location: Location!
    capacity: Int!
    images: [String]!
    facility: [String]
    gade: Int
    type: [String]
}

type Location {
  lon: Float!
  lat: Float!
}

type PropertyItemsConnection {
  items: [PropertyItemsConnectionItem]!
  total: Int!
}

type PropertyItemsConnectionItem {
  property: Property!
  distance: Float
}

type PriceGroupItem {
  group: String!
  count: Int!
}

type PriceGroupByRangeConnection {
  priceRangGroup: [PriceGroupItem]
}

input PropertyItemsInput {
  km: Int
  from: Int
  limit: Int
}

input LocationInput {
  lon: Float!
  lat: Float!
}

input PriceInput {
  min: Int
  max: Int
}

input PropertyFilterInput {
  location: LocationInput
  price: PriceInput
  type: [String]
}

input PriceGroupByRangeInput {
  range: Int
}

type Query {
  propertyItems(filter: PropertyFilterInput, input: PropertyItemsInput): PropertyItemsConnection
  priceGroupByRange(input: PriceGroupByRangeInput): PriceGroupByRangeConnection
}